# https://www.playframework.com/documentation/latest/Configuration

baseUrl = "http://localhost:9000"

play.filters.headers.contentSecurityPolicy=null

db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:mem:play"
db.default.logSql=true

ebean.default = ["models.*"]

play.modules.enabled += "modules.security.SecurityModule"
play.modules.enabled += "modules.upload.UploadModule"

play.filters.enabled += "org.pac4j.play.filters.SecurityFilter"

upload.dev.base = "$project/assets/uploads"


pac4j.security.rules = [
  # Admin pages need a special authorizer and do not support login via Twitter.
  #{"/admin/.*" = {
    #authorizers = "admin"
    #authorizers = "_authenticated_"
    #clients = "FormClient"
  #}}
  # Rules for the REST services. These don't specify a client and will return 401
  # when not authenticated.
  {"/restservices/.*" = {
    authorizers = "_authenticated_"
  }}
  # The login page needs to be publicly accessible.
  {"/login.html" = {
    authorizers = "_anonymous_"
  }}
  # 'Catch all' rule to make sure the whole application stays secure.
  {".*" = {
    authorizers = "_anonymous_"
  }}
]


webpack {
  # the default bundles to include
  prependBundles = ["manifest", "vendor"]

  # The object that is generated by the plugin (needs to implement `WebpackManifestType`)
  manifestClass = "com.bowlingx.webpack.WebpackManifest$"

  # The public path of the assets
  publicPath = "/assets/compiled"
  # The path where they are stored relative to project root
  serverPath = "/public/compiled"

  rendering {
    forceDisableWatch = false
    timeout = 1minute
    renderers {
      prod = 5
      dev = 1
      test = 1
    }
  }
}





#
#play {
#  modules {
#    enabled += be.objectify.deadbolt.scala.DeadboltModule
#  }
#}

